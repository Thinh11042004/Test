# Multi-stage build for production
FROM node:20-alpine AS base

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.0.0 --activate

WORKDIR /app

# Copy workspace files
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY apps/web/package.json ./apps/web/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Development stage
FROM base AS development

WORKDIR /app

# Copy all source code
COPY apps/web ./apps/web

# Set working directory to web app
WORKDIR /app/apps/web

# Expose port
EXPOSE 3000

# Start dev server
CMD ["pnpm", "dev", "--host"]

# Build stage
FROM base AS builder

WORKDIR /app

# Copy source code
COPY apps/web ./apps/web

WORKDIR /app/apps/web

# Build the application
RUN pnpm build

# Production stage
FROM nginx:alpine AS production

# Copy built files
COPY --from=builder /app/apps/web/dist /usr/share/nginx/html

# Copy nginx configuration
COPY apps/web/nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]