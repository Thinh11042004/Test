version: '3.9'

services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: hrms
      POSTGRES_PASSWORD: hrms
      POSTGRES_DB: hrms
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hrms -d hrms"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./infra/docker/services/postgres/init:/docker-entrypoint-initdb.d:ro
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: devminio
      MINIO_ROOT_PASSWORD: devminiosecret
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data

  meilisearch:
    image: getmeili/meilisearch:v1.8
    environment:
      MEILI_ENV: development
      MEILI_MASTER_KEY: devkey
    ports:
      - "7700:7700"

  ai-service:
    build:
      context: .
      dockerfile: apps/ai-service/Dockerfile
    working_dir: /workspace/apps/ai-service
    environment:
      PORT: 8000
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY:-}
      OPENROUTER_MODEL: ${OPENROUTER_MODEL:-openrouter/anthropic/claude-3.5-sonnet}
      OPENROUTER_TITLE: ${OPENROUTER_TITLE:-NovaPeople AI Service}
      OPENROUTER_REFERRER: ${OPENROUTER_REFERRER:-https://example.com}
    ports:
      - "8000:8000"
    volumes:
      - ./apps/ai-service:/workspace/apps/ai-service:rw
    command: ["python", "-m", "uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    working_dir: /workspace/apps/api-gateway
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgresql://hrms:hrms@postgres:5432/hrms
      REDIS_URL: redis://redis:6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MEILI_HOST: http://meilisearch:7700
      MEILI_MASTER_KEY: devkey
      AI_SERVICE_URL: http://ai-service:8000
      API_AUTH_TOKEN: ${API_AUTH_TOKEN:-local-dev-token}
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      ai-service:
        condition: service_started
    volumes:
      - ./apps/api-gateway:/workspace/apps/api-gateway:rw
      - api_gateway_node_modules:/workspace/apps/api-gateway/node_modules
    command: ["npm", "run", "dev"]

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    working_dir: /workspace/apps/web
    environment:
      PORT: 3000
      VITE_API_URL: http://localhost:4000
      VITE_API_AUTH_TOKEN: ${API_AUTH_TOKEN:-local-dev-token}
    ports:
      - "3000:3000"
    depends_on:
      api-gateway:
        condition: service_started
    volumes:
      - ./apps/web:/workspace/apps/web:rw
      - web_node_modules:/workspace/apps/web/node_modules
    command: ["npm", "run", "dev", "--", "--host"]

  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    working_dir: /workspace/apps/worker
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://hrms:hrms@postgres:5432/hrms
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./apps/worker:/workspace/apps/worker:rw
      - worker_node_modules:/workspace/apps/worker/node_modules
    command: ["pnpm", "dev"]

volumes:
  pgdata:
  minio:
  api_gateway_node_modules:
  web_node_modules:
  worker_node_modules:
